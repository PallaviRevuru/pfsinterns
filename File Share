import socket
import threading
import os

# Server configuration
HOST = '0.0.0.0'  # Listen on all available interfaces
PORT = 5000
FILE_DIR = 'shared_files'

if not os.path.exists(FILE_DIR):
    os.makedirs(FILE_DIR)

def handle_client(conn, addr):
    print(f'Connected to {addr}')
    while True:
        # Receive command from client
        command = conn.recv(1024).decode()
        
        if command.startswith('UPLOAD'):
            filename = command.split(' ')[1]
            filesize = int(command.split(' ')[2])
            with open(os.path.join(FILE_DIR, filename), 'wb') as f:
                bytes_received = 0
                while bytes_received < filesize:
                    data = conn.recv(1024)
                    f.write(data)
                    bytes_received += len(data)
            print(f'Received file: {filename}')
            conn.send(b'UPLOAD COMPLETE')
        
        elif command.startswith('DOWNLOAD'):
            filename = command.split(' ')[1]
            filepath = os.path.join(FILE_DIR, filename)
            if os.path.isfile(filepath):
                conn.send(f'EXISTS {os.path.getsize(filepath)}'.encode())
                with open(filepath, 'rb') as f:
                    data = f.read(1024)
                    while data:
                        conn.send(data)
                        data = f.read(1024)
                print(f'Sent file: {filename}')
            else:
                conn.send(b'NOT FOUND')
        
        else:
            break
    conn.close()

def start_server():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind((HOST, PORT))
        s.listen()
        print(f'Server listening on {HOST}:{PORT}')
        while True:
            conn, addr = s.accept()
            threading.Thread(target=handle_client, args=(conn, addr)).start()

if __name__ == "__main__":
    start_server()
